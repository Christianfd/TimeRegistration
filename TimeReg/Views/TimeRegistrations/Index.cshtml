@model TimeReg.ViewModels.TimeRegistrationViewModel

@{
    ViewBag.Title = "Time Registrations - Index";
}

<h2>Index</h2>

<p>
    <a href="javascript:void()" class="Create">Create New</a>
</p>


<div id="PartialViewTableWrapper"> Loading TimeRegistrations..</div>

<!-- Modal -->
<div class="modal" id="PartialViewModal" tabindex="-1" data-backdrop="static" role="dialog" aria-labelledby="PartialViewModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="PartialViewModalTitle">Rep It Project And Order Tools</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="PartialViewModalBody">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" data-crud="" id="PartialViewModalSaveButton" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div id="AjaxJSLoader"></div>

<input type="hidden" id="currentControllerPath" value="@Url.Content("~/"+ViewBag.CurrentController)" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    @Scripts.Render("~/bundles/bootstrap")
    

<script>
    function inputCleanUp(state) {
        console.log(state);
        
        var form = $("#PartialViewModalBody").children('form');
        if (state == 'full') {
            form.find(':input').each(function () {
                switch (this.type) {
                    case 'password':
                    case 'select-multiple':
                    case 'text':
                    case 'number':
                    case 'textarea':
                        $(this).val('');
                        break;
                    case 'checkbox':
                    case 'radio':
                        this.checked = false;
                }
                form.find(".cleanDropDown").each(function () {
                    console.log($(this).val());
                    $(this).val('');
                    $(".selectpicker").trigger("chosen:updated");
                });

            });
        } else if (state == 'partial') {
            form.find(':input').each(function () {
                switch (this.type) {
                    case 'select-multiple':
                    case 'number':
                    case 'text':
                    case 'textarea':
                        $(this).val('');
                        break;
                    case 'checkbox':
                    case 'radio':
                        this.checked = false;
                }
                $(".selectpicker").trigger("chosen:updated");
            });

            $(".selectpicker").trigger("chosen:updated");
        }
        console.log("inputCleanUp triggered");
        $(".selectpicker").trigger("chosen:updated");
        }

    //Below bundle is loaded after inputCleanUp as it's dependant on it in this case.
</script>

@Scripts.Render("~/bundles/dynamiccrud")




    @*Below is for the Create and Edit modals*@

    @*On dropdownlist change to check if the other dropdowns need to be changed*@
    <script>

        $(document).on('change', '.selectpicker.dynamicUpdate', function () {
            DropDown_IndexChange(this.id);

        });

            function DropDown_IndexChange(id) {
                if (id != null) {
                    id = id.replace("combobox", "");
                    var key = $("#" + id + " option:selected").val();
                    var target = $("");
                    //Based on the calling Id, we need to identify the dropdownlist in need of change:
                    if (id == "FK_UserId") { target = $("#FK_OrderId") }
                    if (id == "FK_OrderId") { target = $("#FK_ProjectId") }
                } else { return }


                function populateDropDownList(result) {
                    //empty the targeted dropdownlist
                    target.empty();
                    //add the found results
                    $.each(result, function (index, value) {
                        target.append($('<option/>', {
                            value: value.Value,
                            text: value.Text
                        }));
                        //updates the selectpicker/chosen to the new value
                        $(".selectpicker").trigger("chosen:updated");
                        return;
                    });
                }


                //Ajax Call is currently only needed When Chosing user or Order Number
                if (id == 'FK_UserId' || id == 'FK_OrderId') {
                    $.getJSON('@Url.Action("AjaxDyanimcDropDown")', { dropDownKey: key, dropDownId: id }, function (result) {
                        if (result != null) {

                            console.log(result);

                            populateDropDownList(result, target);
                        };
                    });
                }

                console.log("The id trigger was    : " + id);
                console.log("Corresponding value is: " + key);
                console.log("The DropDown Target is: " + target.attr('id'));
            };
</script>

}