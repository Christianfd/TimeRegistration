@model TimeReg.ViewModels.TimeRegistrationViewModel

@{
    ViewBag.Title = "Time Registrations - Create";
}

@**@

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TimeRegistration</h4>
        @*Needs the correkt link commented out until I have the correct link*@
        @*<h6> <a href="https://www.w3schools.com" title="Direct Links to Active CTO Projects">CTO Active Projects</a></h6>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Replaced by autogenerated ID*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.PK_Id, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PK_Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PK_Id, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-10">
            </div>
        </div><div class="form-group">
            <div class="col-md-10">
            </div>
        </div>

        @*User dropdown*@
        <div class="form-group">
            @Html.LabelFor(model => model.FK_UserId, "User", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10 ui-widget">
                @*Auto Selection Should proably happen here*@
                @Html.DropDownList("FK_UserId", (SelectList)ViewBag.FK_UserId, "Please Select yourself", htmlAttributes: new { @class = "form-control selectpicker", @AutoPostBack = "true", })
                @Html.ValidationMessageFor(model => model.FK_UserId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Order Number*@
        <div class="form-group">
            @Html.LabelFor(model => model.FK_OrderId, "Order Number", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-8 ui-widget">
                @Html.DropDownList("FK_OrderId", (SelectList)ViewBag.FK_OrderId, "Please Select Order Number", htmlAttributes: new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.FK_OrderId, "", new { @class = "text-danger" })
                @*Button for copying DSA Number*@
                <div>
                    <button type="button" id="btnScore" class="orderNumberBtn" title="Copy Order Number">
                        &#x1f4cb
                    </button>
                </div>
            </div>
        </div>

        @*Projects drop down list*@
        <div class="form-group">
            @Html.LabelFor(model => model.FK_ProjectId, "Project", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10 ui-widget">

                @Html.DropDownList("FK_ProjectId", (SelectList)ViewBag.FK_ProjectId, "Please Select a Project", htmlAttributes: new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.FK_ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Selection of Task Id*@
        <div class="form-group">
            @Html.LabelFor(model => model.FK_TaskId, "Task Type", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10 ui-widget">
                @Html.DropDownList("FK_TaskId", (SelectList)ViewBag.FK_TaskId, "Please select the Correct Task Type", htmlAttributes: new { @class = "form-control selectpicker", @value = "&nbsp;" })
                @Html.ValidationMessageFor(model => model.FK_TaskId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Time*@
        <div class="form-group">
            @Html.LabelFor(model => model.Time, "Time", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Date*@
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "col-form-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker", type = "text", textmode = "text", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Comment*@
        <div class="form-group">
            @Html.LabelFor(model => model.Comment, "Comment", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Replaced by DateTime.Now *@
        @*<div class="form-group">
                @Html.LabelFor(model => model.DateEntry, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateEntry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateEntry, "", new { @class = "text-danger" })
                </div>

            </div>*@

        <div class="form-group">
            <div class="col-md-10">
            </div>

        </div>
       
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-secondary" />
            </div>
        </div>
    </div>


    


}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @*OrderNumber trim to "Number Handling"*@
    <script>
        function OrderNumberSplit(text) {
            var splitText = text.split(" :: ", 1)[0];
            var trimText = $.trim(splitText);
            return trimText;

        }
    </script>

    @*Date Picker and Clipboard Functionality*@
    <script>
        $(".datepicker").datepicker({ dateFormat: 'dd/M/yy' }).val();

        //Clipboard functionality
        function fallbackCopyTextToClipboard(text) {
            var textArea = document.createElement("textarea");
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            try {
                var successful = document.execCommand("copy");
                var msg = successful ? "successful" : "unsuccessful";
                console.log("Fallback: Copying text command was " + msg);
            } catch (err) {
                console.error("Fallback: Oops, unable to copy", err);
            }

            document.body.removeChild(textArea);
        }

        //Copies to Clipboard
        function copyTextToClipboard(text) {
            if (!navigator.clipboard) {
                fallbackCopyTextToClipboard(text);
                return;
            }
            navigator.clipboard.writeText(text).then(
              function () {
                  console.log("Async: Copying to clipboard was successful!");
              },
              function (err) {
                  console.error("Async: Could not copy text: ", err);
              }
            );
        }

        //Selects the copy button
        var copyOrderBtn = document.querySelector("#btnScore");

        //Triggers Copy to clipboard on button click
        copyOrderBtn.addEventListener("click", function (event) {
            var OrderNumberText = $("[id*='FK_OrderId'] :selected").text();
            //split and trims the value first
            OrderNumberText = OrderNumberSplit(OrderNumberText);
            //Clipboard Functionality
            copyTextToClipboard(OrderNumberText);
        });
    </script>

    @*Auto Completion Script -- Use Class "selectpicker" on dropdowns*@
  <script src="~/Scripts/tools/searchableDropDown.js" 
        type="text/javascript"></script>

    @*Ajax and Json Handling*@
    <script>

        $("custom-combobox").focusout(function () {
        Alert("triggered");
        });

            function DropDown_IndexChange(id) {
                if (id != null) {
                    id = id.replace("combobox", "");
                    var key = $("#" + id + " option:selected").val();
                    var target = $("");
                    //Based on the calling Id, we need to identify the dropdownlist in need of change:
                    if (id == "FK_UserId")  {target = $("#FK_OrderId")  }
                    if (id == "FK_OrderId") {target = $("#FK_ProjectId")}
                } else {return}



                function populateDropDownList(result) {
                    //empty the targeted dropdownlist
                    target.empty();
                    //add the found results
                    $.each(result, function (index, value) {
                        target.append($('<option/>', {
                            value: value.Value,
                            text: value.Text
                        }));
                        return;
                    });
                }


                //Ajax Call is currently only needed When Chosing user or Order Number
                if (id == 'FK_UserId' || id == 'FK_OrderId') {
                    $.getJSON('@Url.Action("AjaxDyanimcDropDown")', { dropDownKey: key, dropDownId: id }, function (result) {
                        if (result != null) {

                            console.log(result);
                    
                            populateDropDownList(result, target);
                        };
                    });
                }
              
          
                console.log("The id trigger was    : " + id);
                console.log("Corresponding value is: " + key);
                console.log("The DropDown Target is: " + target.attr('id'));

        
        
            };
    </script>

}
