@model TimeReg.VI_ProjectAndOrderTools

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MultiHub for Projects and Order Number</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <br />
        <span class="col-form-label">For Order Numbers</span>

        @*Organization*@
        <div class="form-group">
            @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
            </div>
        </div>

     
        @*Customer Reference*@
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerRefName, "Customer Reference", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerRefName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerRefName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Requester*@
        <div class="form-group">
            @Html.LabelFor(model => model.RequesterName, "Requester", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequesterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequesterName, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <span class="col-form-label">For Projects</span>

        @*Turbine*@
        <div class="form-group">
            @Html.LabelFor(model => model.TurbineName,"Turbine Name", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TurbineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TurbineName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Platform or Product Name*@
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName,"Platform or Product Name", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <span class="col-form-label">Other</span>

        @*Time Type*@
        <div class="form-group">
            @Html.LabelFor(model => model.TimeTypeName, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeTypeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Task Type*@
        <div class="form-group">
            @Html.LabelFor(model => model.TaskTypeName, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskTypeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-secondary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
